@model I_RAY_ASSET_TRACKER_MVC.Models.AdminModel

@using PagedList.Mvc

@{
    ViewBag.Title = "Admin";
    Layout = "~/Views/Shared/AdminDashBoardLayout.cshtml";
}

<style>
    .card {
        --bs-card-spacer-y: 3rem;
        --bs-card-spacer-x: 3rem;
    }

    .text-xs {
        font-size: .85rem;
    }

    h4 {
        text-align: center;
        font-size: 2rem;
        padding-top: 2rem;
    }

    #tblAdminAssetsHaveList th {
        background-color: #ffc107;
    }

  /*  table#tblAdminAssetsHaveList {
        width: auto;
        margin-left: 8rem;
    }*/

    #tblAdminTransferList th {
        background-color: #ffc107;
    }

   /* table#tblAdminTransferList {
        width: auto;
        margin-left: 1rem;
    }*/

    tr {
        text-align: center;
    }

    /*.pagination {
        margin-block-start: revert;
        margin-left: 13rem;*/
        /*  margin-top: 1rem;*/
    /*}

    .pagination-container {
        margin: auto;
    }

    .ul.pagination {
        display: inline-block;
        padding: 0;
        margin: 0;
    }

    ul.pagination li {
        display: inline;
    }

        ul.pagination li a {
            color: black;
            float: left;
            padding: 8px 16px;
            text-decoration: none;
            transition: background-color .3s;
        }

            ul.pagination li a.active {
                background-color: #4CAF50;
                color: white;
            }

            ul.pagination li a:hover:not(.active) {
                background-color: #ddd;
            }*/

    .transfer-progress {
        position: fixed;
        top: 50%;
        left: 50%;
        height: 6em;
        padding-top: 2.3em;
        z-index: 1;
        /* The following properties are the ones most likely to change */
        width: 20em;
        /* Set 'margin-left' to a negative number that is 1/2 of 'width' */
        margin-left: -10em;
        padding-left: 2.1em;
        background-color: #1161ee;
        color: #fff;
        -webkit-border-radius: 0.4em;
        -moz-border-radius: 0.4em;
        border-radius: 0.4em;
        box-shadow: 0px 0px 10px 2px #ffc107;
        -webkit-box-shadow: 0px 0px 10px 2px #ffc107;
        -moz-box-shadow: 0px 0px 10px 2px #ffc107;
    }
    /* Changing style for spinner */
    .transfer-progress {
        padding-top: 2em;
        width: 34em;
        margin-left: -11.5em; /* Set to a negative number that is 1/2 of the width */
    }

        .transfer-progress i {
            margin-right: 0.5em;
        }
</style>

<script>
    window.onload = function () {
    var chart = new CanvasJS.Chart("TotalAssetschartContainer", {
        exportEnabled: true,
        animationEnabled: true,
        theme: "light1",
        title: {
            text: "Total Assets"
        },
        legend: {
            cursor: "pointer",
            itemclick: explodePie,
            verticalAlign: "center",
            horizontalAlign: "right"
        },
        data: [{
            type: "pie",
            showInLegend: true,
            toolTipContent: "{name}: <strong>{y}</strong>",
            startAngle: -45,
            indexLabel: "{name} ({y})",
            indexLabelFontColor: "#12122B",
          /*  indexLabelPlacement: "inside",*/
            indexLabelFontSize: 15,
            dataPoints: @Html.Raw(ViewBag.DataPoints),
	}]
    });
        chart.render();

        var Assetchart = new CanvasJS.Chart("AssetsUsechartContainer", {
            theme: "light1", // "light1", "light2", "dark1", "dark2"
            exportEnabled: true,
      animationEnabled: true,
	title: {
		text: "Total Assets In Use"
            },
            subtitles: [{
                text: "FSW, SV, S&R, FWV, IS, AUTOMATION"
            }],
	data: [{
        type: "pie",
        showInLegend: true,
        toolTipContent: "{name}: <strong>{y}</strong>",
		startAngle: 60,
		indexLabelFontSize: 16,
        indexLabel: "{name} - {y}",
		dataPoints: @Html.Raw(ViewBag.AssetDataPoints),
	}]
});
        Assetchart.render();

        var chart = new CanvasJS.Chart("SaveAssetTypeChatContainer", {
	animationEnabled: true,
	theme: "light2", // "light1", "light2", "dark1", "dark2"
	title: {
        text: "Total Number of AssetTypes under FSW,SV,S&R,FWV",
        fontSize: 20,
            },
            dataPointMaxWidth: 30,
            axisY: {
                title: "No. of Asset Type"
            },
            legend: {
                cursor: "pointer",
                itemclick: toggleDataSeries
            },
            toolTip: {
                shared: true
            },
	data: [{
        type: "column",
        name: "FSW",
        showInLegend: true,
        legendText: "FSW",
        toolTipContent: "{name}: <strong>{y}</strong>",
        indexLabel: "{name}",
		dataPoints: @Html.Raw(ViewBag.SaveAssetTypeFSWDataPoints),
    },
        {
          type: "column",
        name: "SV",
        showInLegend: true,
        legendText: "SV",
        toolTipContent: "{name}: <strong>{y}</strong>",
		dataPoints: @Html.Raw(ViewBag.SaveAssetTypeSVDataPoints),
        },
        {
          type: "column",
        name: "S&R",
        showInLegend: true,
        legendText: "S&R",
        toolTipContent: "{name}: <strong>{y}</strong>",
		dataPoints: @Html.Raw(ViewBag.SaveAssetTypeSRDataPoints),
        },
         {
          type: "column",
        name: "FWV",
        showInLegend: true,
        legendText: "FWV",
        toolTipContent: "{name}: <strong>{y}</strong>",
		dataPoints: @Html.Raw(ViewBag.SaveAssetTypeFWVDataPoints),
        },
    ]
});
        chart.render();

        var chart = new CanvasJS.Chart("AssignAssetAssetTypeChatContainer", {
	animationEnabled: true,
	theme: "light2", // "light1", "light2", "dark1", "dark2"
	title: {
        text: "Total Assign of AssetTypes under FSW,SV,S&R,FWV",
        fontSize: 20,
            },
            dataPointMaxWidth: 30,
            axisY: {
                title: "No. of Asset Type"
            },
            legend: {
                cursor: "pointer",
                itemclick: toggleDataSeries
            },
            toolTip: {
                shared: true
            },
	data: [{
        type: "column",
        name: "FSW",
        showInLegend: true,
        legendText: "FSW",
        toolTipContent: "{name}: <strong>{y}</strong>",
        indexLabel: "{name}",
		dataPoints: @Html.Raw(ViewBag.AssignAssetTypeFSWDataPoints),
    },
        {
          type: "column",
        name: "SV",
        showInLegend: true,
        legendText: "SV",
        toolTipContent: "{name}: <strong>{y}</strong>",
		dataPoints: @Html.Raw(ViewBag.AssignAssetTypeSVDataPoints),
        },
        {
          type: "column",
        name: "S&R",
        showInLegend: true,
        legendText: "S&R",
        toolTipContent: "{name}: <strong>{y}</strong>",
		dataPoints: @Html.Raw(ViewBag.AssignAssetTypeSRDataPoints),
        },
         {
          type: "column",
        name: "FWV",
        showInLegend: true,
        legendText: "FWV",
        toolTipContent: "{name}: <strong>{y}</strong>",
		dataPoints: @Html.Raw(ViewBag.AssignAssetTypeFWVDataPoints),
        },
        {
          type: "column",
        name: "IS",
        showInLegend: true,
        legendText: "IS",
        toolTipContent: "{name}: <strong>{y}</strong>",
		dataPoints: @Html.Raw(ViewBag.AssignAssetTypeISDataPoints),
        },
         {
          type: "column",
             name: "Automation",
        showInLegend: true,
             legendText: "Automation",
        toolTipContent: "{name}: <strong>{y}</strong>",
		dataPoints: @Html.Raw(ViewBag.AssignAssetTypeAutomationDataPoints),
        },
    ]
});
chart.render();

        function explodePie(e) {
            if (typeof (e.dataSeries.dataPoints[e.dataPointIndex].exploded) === "undefined" || !e.dataSeries.dataPoints[e.dataPointIndex].exploded) {
                e.dataSeries.dataPoints[e.dataPointIndex].exploded = true;
            } else {
                e.dataSeries.dataPoints[e.dataPointIndex].exploded = false;
            }
            e.chart.render();
        }
        function toggleDataSeries(e) {
            if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                e.dataSeries.visible = false;
            }
            else {
                e.dataSeries.visible = true;
            }
            chart.render();
        }
    }

    $(document).ready(function () {
        $('#tblAdminAssetsHaveList').DataTable();
        $('#tblAdminTransferList').DataTable();
    });

    $(document).on('click', '.AdminTransferAsset', function (e) {
        e.preventDefault();
        var table = $('#tblAdminAssetsHaveList').DataTable();
        var data = table.row($(this).parents('tr')).data();
        $.ajax({
            url: "/Admin/TransferAsset", // Replace with your controller and action method
            data: {
                Id: data[0]
            },
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (response) {
                $("#AdminpartialModal").find(".modal-body").html(response);
                $("#AdminpartialModal").modal('show');
            },
             failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    });

    //$(function () {
    //    $("#tblAdminAssetsHaveList .AdminTransferAsset").click(function () {
    //          /*debugger;*/
    //        var Id = $(this).closest("tr").find("td").eq(0).html();
    //        $.ajax({
    //            type: "POST",
    //            url: "/Admin/TransferAsset",
    //            data: '{Id: "' + Id + '" }',
    //            contentType: "application/json; charset=utf-8",
    //            dataType: "html",
    //            success: function (response) {
    //               /* *//* debugger;*/
    //                $("#AdminpartialModal").find(".modal-body").html(response);
    //                $("#AdminpartialModal").modal('show');
    //            },
    //            failure: function (response) {
    //                alert(response.responseText);
    //            },
    //            error: function (response) {
    //                alert(response.responseText);
    //            }
    //        });
    //    });
    //});

    function DisplaySendProgressMessage(ctl, msg) {
        /* debugger;*/
        var AssetTransferTeam = $('#AssetTransferTeam');
        if (AssetTransferTeam.val() == '') {
            alert('Please select the Team.');
            return false;
        }
        var AssetTransferEmployeeName = $('#AssetTransferEmployeeName');
        if (AssetTransferEmployeeName.val() == '--Select EmployeeName--') {
            alert('Please select the EmployeeName.');
            return false;
        }

        // Turn off the "Save" button and change text
        $(ctl).prop("disabled", true).text(msg);
        // Gray out background on page
        $("body").addClass("transfer-progress-bg");

        // Wrap in setTimeout so the UI can update the spinners
        setTimeout(function () {
            $(".transfer-progress").removeClass("visually-hidden");
        }, 1);
        $(ctl).prop("disabled", false).text(msg);
        return true;
        this.submit();
    }
</script>

<div class="pagetitle">
    <h1>Dashboard</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#">Home</a></li>
            <li class="breadcrumb-item active">Dashboard</li>
        </ol>
    </nav>
</div><!-- End Page Title -->

<div class="row">
    <!-- Total Assets Card Example -->
    <div class="col-xl-4 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body animate__animated animate__zoomIn animate__delay-1s">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                            Total Assets
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@ViewBag.TotalAssets</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-shopping-cart fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Total Assets In Use Card Example -->
    <div class="col-xl-4 col-md-6 mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body animate__animated animate__zoomIn animate__delay-1s">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                            Total Assets In Use (FSW+SV+S&R)
                        </div>
                        <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800">@ViewBag.AssignAssets</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-shopping-cart fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Pending Requests Card Example -->
    <div class="col-xl-4 col-md-6 mb-4">
        <div class="card border-left-warning shadow h-100 py-2">
            <div class="card-body animate__animated animate__zoomIn animate__delay-1s">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                            Pending Requests
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Session["totalAssignRequests"]</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-comments fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xl-6 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body animate__animated animate__zoomIn animate__delay-1s">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div id="TotalAssetschartContainer" style="height: 250px; width: 100%;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-6 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body animate__animated animate__zoomIn animate__delay-1s">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div id="AssetsUsechartContainer" style="height: 250px; width: 100%;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body animate__animated animate__zoomIn animate__delay-1s">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div id="SaveAssetTypeChatContainer" style="height: 400px; width: 100%;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body animate__animated animate__zoomIn animate__delay-1s">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div id="AssignAssetAssetTypeChatContainer" style="height: 400px; width: 100%;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <h4>What I Have ?</h4>
</div>

<div class="row">
    <table id="tblAdminAssetsHaveList" class="display compact table table-bordered table-primary">
        <thead>
            <tr>
                <th>Assign ID</th>
                <th>Employee Name</th>
                <th>Asset Belongs To</th>
                <th>Asset Type</th>
                <th>HWSW Name</th>
                <th>SerialNumber</th>
                <th>Assign Date</th>
                <th>Return Date</th>
                <th>Tranfer</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.adminTable1Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.AssignID)</td>
                    <td>@Html.DisplayFor(modelItem => item.EmployeeName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Assetbelongsto)</td>
                    <td>@Html.DisplayFor(modelItem => item.AssetType)</td>
                    <td>@Html.DisplayFor(modelItem => item.HWSWName)</td>
                    <td>@Html.DisplayFor(modelItem => item.SerialNumberVersionNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.AssignDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.ExpectedReturnDate)</td>
                    <td>
                        <a class="AdminTransferAsset button btn btn-primary" data-toggle="modal" data-target="#AdminpartialModal" href="javascript:void(0);">
                            Transfer
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@*<div class="pagination">
        Page @(Model.adminTable1Model.PageCount < Model.adminTable1Model.PageNumber ? 0 : Model.adminTable1Model.PageNumber)
        of @Model.adminTable1Model.PageCount @Html.PagedListPager(Model.adminTable1Model, page => Url.Action("Index", new { page }))
    </div>*@

<div class="row">
    <h4>Asset Transfred To?</h4>
</div>

<div class="row">
    <table id="tblAdminTransferList" class="display compact table table-bordered table-primary">
        <thead>
            <tr>
                <th>From_EmpID</th>
                <th>From EmployeeName</th>
                <th>Asset Belongs To</th>
                <th>AssetType</th>
                <th>HWSW Name</th>
                <th>SerialNumber</th>
                <th>Asset TransferDate</th>
                <th>To_EmpID</th>
                <th>Team To Which Asset is Transfered</th>
                <th>ToEmployeeName</th>
                <th>Approve</th>
                <th>Reject</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.adminTable2Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.FromEmpID)</td>
                    <td>@Html.DisplayFor(modelItem => item.FromEmployeeName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Assetbelongsto)</td>
                    <td>@Html.DisplayFor(modelItem => item.AssetType)</td>
                    <td>@Html.DisplayFor(modelItem => item.HWSWName)</td>
                    <td>@Html.DisplayFor(modelItem => item.SerialNumberVersionNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.AssetTransferDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.ToEmpID)</td>
                    <td>@Html.DisplayFor(modelItem => item.TeamToWhichAssetisTransfered)</td>
                    <td>@Html.DisplayFor(modelItem => item.ToEmployeeName)</td>
                    <td>
                        <a id="btnApprove" class="button btn btn-success" href="@Url.Action("SaveTransferAssetFromEmployee", "Admin", new { id = item.FromEmpID})">
                            Approve
                        </a>
                    </td>
                    <td>
                        <a class="button btn btn-danger" href="@Url.Action("RejectTransferAssetFromEmployee", "Admin", new { id = item.FromEmpID})">
                            Reject
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@*<div class="pagination">
        Page @(Model.adminTable2Model.PageCount < Model.adminTable2Model.PageNumber ? 0 : Model.adminTable2Model.PageNumber)
        of @Model.adminTable2Model.PageCount @Html.PagedListPager(Model.adminTable2Model, page => Url.Action("Index", new { page }))
    </div>*@
@using (Html.BeginForm("SaveTransferAsset", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div id="AdminpartialModal" class="modal fade" data-backdrop="static" tabindex="-1" role="dialog" aria-label="partialModalLable" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <h5 class="modal-title fs-5" id="partialModalLable">Asset Transfer to Employee</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="submit" onclick="return DisplaySendProgressMessage(this, 'Transfer...');" class="btn btn-primary">Transfer Asset</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}